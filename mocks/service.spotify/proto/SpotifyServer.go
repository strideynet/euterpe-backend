// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	spotifyv1pb "euterpe/service.spotify/proto"
	mock "github.com/stretchr/testify/mock"
)

// SpotifyServer is an autogenerated mock type for the SpotifyServer type
type SpotifyServer struct {
	mock.Mock
}

// GetAuthURL provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) GetAuthURL(_a0 context.Context, _a1 *spotifyv1pb.GetAuthURLRequest) (*spotifyv1pb.GetAuthURLResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *spotifyv1pb.GetAuthURLResponse
	if rf, ok := ret.Get(0).(func(context.Context, *spotifyv1pb.GetAuthURLRequest) *spotifyv1pb.GetAuthURLResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*spotifyv1pb.GetAuthURLResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *spotifyv1pb.GetAuthURLRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListening provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) GetListening(_a0 context.Context, _a1 *spotifyv1pb.GetListeningRequest) (*spotifyv1pb.GetListeningResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *spotifyv1pb.GetListeningResponse
	if rf, ok := ret.Get(0).(func(context.Context, *spotifyv1pb.GetListeningRequest) *spotifyv1pb.GetListeningResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*spotifyv1pb.GetListeningResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *spotifyv1pb.GetListeningRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RedeemCode provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) RedeemCode(_a0 context.Context, _a1 *spotifyv1pb.RedeemCodeRequest) (*spotifyv1pb.RedeemCodeResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *spotifyv1pb.RedeemCodeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *spotifyv1pb.RedeemCodeRequest) *spotifyv1pb.RedeemCodeResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*spotifyv1pb.RedeemCodeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *spotifyv1pb.RedeemCodeRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedSpotifyServer provides a mock function with given fields:
func (_m *SpotifyServer) mustEmbedUnimplementedSpotifyServer() {
	_m.Called()
}
