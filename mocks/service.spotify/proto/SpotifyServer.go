// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	proto "euterpe/service.spotify/proto"
	mock "github.com/stretchr/testify/mock"
)

// SpotifyServer is an autogenerated mock type for the SpotifyServer type
type SpotifyServer struct {
	mock.Mock
}

// GetAuthURL provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) GetAuthURL(_a0 context.Context, _a1 *proto.GetAuthURLRequest) (*proto.GetAuthURLResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.GetAuthURLResponse
	if rf, ok := ret.Get(0).(func(context.Context, *proto.GetAuthURLRequest) *proto.GetAuthURLResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.GetAuthURLResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.GetAuthURLRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListening provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) GetListening(_a0 context.Context, _a1 *proto.GetListeningRequest) (*proto.GetListeningResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.GetListeningResponse
	if rf, ok := ret.Get(0).(func(context.Context, *proto.GetListeningRequest) *proto.GetListeningResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.GetListeningResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.GetListeningRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RedeemCode provides a mock function with given fields: _a0, _a1
func (_m *SpotifyServer) RedeemCode(_a0 context.Context, _a1 *proto.RedeemCodeRequest) (*proto.RedeemCodeResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.RedeemCodeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *proto.RedeemCodeRequest) *proto.RedeemCodeResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.RedeemCodeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.RedeemCodeRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedSpotifyServer provides a mock function with given fields:
func (_m *SpotifyServer) mustEmbedUnimplementedSpotifyServer() {
	_m.Called()
}
